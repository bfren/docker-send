#!/usr/bin/nu

use bf

# Setup and install Send
def main [] {
    # add installation dependencies
    bf pkg install ["--virtual" ".install" "git"]

    # get Send version
    cd /tmp
    let version = bf fs read SEND_REVISION
    bf write $"Installing Send v($version)."
    bf build add Send $version

    # get details of node user
    let user = "node"
    let home = $"/home/($user)"

    # mark app scripts as executable
    bf ch --mode +x app-*

    # clone source code
    bf write "Cloning source code."
    git clone --depth 1 --branch $"v($version)" https://github.com/timvisee/send send
    cd send
    let send = pwd

    # set ownership
    bf write "Setting ownership of source files."
    bf ch --owner $"($user):($user)" --recurse $send

    # build application as node user
    bf write "Building application."
    with-env {HOME: $home} {
        { ^s6-setuidgid $user /tmp/app-build } | bf handle -d "Install: Build"
    }

    # create folder structure
    let src = $"(bf env ETC)/src/send"
    mkdir $src
    cd $src
    mkdir ".config/configstore"
    mkdir "public"

    # copy built application to src directory
    bf write $"Copying Send to ($src)."
    cp $"($send)/package*.json" .
    cp -r $"($send)/app" .
    cp -r $"($send)/common" .
    cp -r $"($send)/dist" .
    cp -r $"($send)/public/locales" ./public
    cp -r $"($send)/server" .
    ^ln -s dist/version.json version.json

    # set ownership
    bf write "Setting ownership of application files."
    bf ch --owner $"($user):($user)" --recurse $src

    # configure application
    bf write "Configurating application."
    with-env {HOME: $home} {
        { ^s6-setuidgid $user /tmp/app-configure } | bf handle -d "Install: Configure"
    }

    # set ownership
    bf write "Setting permissions for application files."
    bf ch --mode 0500 --recurse $src

    # add bf-send module to config
    bf config use bf-send

    # cleanup
    bf write "Cleaning up."
    bf pkg remove [".install"]
}
